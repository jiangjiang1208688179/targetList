{"remainingRequest":"D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mine\\targetList\\targetList\\src\\components\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\mine\\targetList\\targetList\\src\\components\\login.vue","mtime":1548397501331},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n\r\n  data() {\r\n    var checkName = (rule, value, callback) => {\r\n      if (!value){\r\n        return callback(new Error('用户名不能为空'))\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var checkPassword = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('密码不能为空，请输入有效密码'))\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      loginForm: {\r\n        name: \"123\",\r\n        password: \"5989\"\r\n      },\r\n      checkLogin: {\r\n        name: [\r\n          {validator: checkName, trigger: 'blur'}  //另外一种写法：添加required:true字段，validator字段后边可以直接接提示字符串\r\n        ],\r\n        password: [\r\n          {validator: checkPassword, trigger: 'blur'}\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formname) {\r\n      this.$refs[formname].validate((valid)=>{\r\n        if (valid){  //判断表单校验是否通过，通过了，就执行xxx\r\n          localStorage.setItem('tgm-login',this.loginForm.name);\r\n          this.$router.push('/');\r\n          // alert('submit');\r\n        } else {  //未通过表单校验，执行xxx\r\n          console.log('error submite');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formname) {\r\n      this.$refs[formname].resetFields();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"login\">\r\n    <div>\r\n      <div class=\"tgm-login\">\r\n      <el-form :model=\"loginForm\" :rules=\"checkLogin\" ref=\"loginForm\" label-width=\"60px\" class=\"demo-ruleForm\">\r\n        <el-form-item label=\"用户名\" prop=\"name\">\r\n          <el-input type=\"password\" v-model=\"loginForm.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" prop=\"password\">\r\n           <!--此处@keyup.enter.native=\"\",为何变成@keyup.enter=\"\"不行呢？-->\r\n          <el-input v-model.number=\"loginForm.password\" @keyup.enter.native=\"submitForm('loginForm')\"></el-input> \r\n        </el-form-item>\r\n        <el-form-item class=\"tgm-loginButton\">\r\n          <el-button style=\"margin-left:90px\" type=\"primary\" @click=\"submitForm('loginForm')\">提交</el-button>\r\n          <el-button @click=\"resetForm('loginForm')\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n\r\n  data() {\r\n    var checkName = (rule, value, callback) => {\r\n      if (!value){\r\n        return callback(new Error('用户名不能为空'))\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var checkPassword = (rule, value, callback) => {\r\n      if (!value) {\r\n        return callback(new Error('密码不能为空，请输入有效密码'))\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      loginForm: {\r\n        name: \"123\",\r\n        password: \"5989\"\r\n      },\r\n      checkLogin: {\r\n        name: [\r\n          {validator: checkName, trigger: 'blur'}  //另外一种写法：添加required:true字段，validator字段后边可以直接接提示字符串\r\n        ],\r\n        password: [\r\n          {validator: checkPassword, trigger: 'blur'}\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    submitForm(formname) {\r\n      this.$refs[formname].validate((valid)=>{\r\n        if (valid){  //判断表单校验是否通过，通过了，就执行xxx\r\n          localStorage.setItem('tgm-login',this.loginForm.name);\r\n          this.$router.push('/');\r\n          // alert('submit');\r\n        } else {  //未通过表单校验，执行xxx\r\n          console.log('error submite');\r\n          return false;\r\n        }\r\n      });\r\n    },\r\n    resetForm(formname) {\r\n      this.$refs[formname].resetFields();\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style scoped>\r\n.login{\r\n  width: 100vw;\r\n  height: 100vh;\r\n/* background-color: black; */\r\nbackground-image:url('../assets/login-bg1.jpg')\r\n}\r\n.tgm-login{\r\n  padding: 20px;\r\n  width: 400px;\r\n  height: 200px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-top:-200px;\r\n  margin-left: -200px;\r\n  background-color: #ddccaa88;\r\n}\r\n</style>"]}]}