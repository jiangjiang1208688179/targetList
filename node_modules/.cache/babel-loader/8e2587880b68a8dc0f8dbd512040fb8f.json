{"remainingRequest":"D:\\mine\\targetList\\targetList\\node_modules\\babel-loader\\lib\\index.js!D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mine\\targetList\\targetList\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\mine\\targetList\\targetList\\src\\views\\Home.vue","mtime":1548397623025},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport axios from \"axios\";\nimport alreadyTask from \"@/components/alreadyTask.vue\";\nimport { getTasks, taskEdit, taskAdd, taskRm } from \"@/api/apis.js\";\nexport default {\n  name: \"home\",\n  components: {\n    alreadyTask: alreadyTask\n  },\n  data: function data() {\n    return {\n      dateTarget: [],\n      nowBox: 0,\n      createItem: [{\n        status: false,\n        id: \"5c21f690c13ebb4ae7df1cfe\"\n      }, {\n        status: false,\n        id: \"5c21f725c13ebb4ae6df1d00\"\n      }, {\n        status: false,\n        id: \"5c22f19ac13ebb65c641c609\"\n      }],\n      //确定当前是在那个地方创建新任务\n      createTargetName: \"\",\n      checked: false,\n      checkBox: false,\n      editeTargetName: \"\",\n      pull: {\n        a: -1,\n        b: -1\n      },\n      //鼠标最后经过那个item\n      isEdite: {\n        a: -1,\n        b: -1\n      },\n      isAlready: false,\n      // mouseOver: false,   //鼠标经过控制删除和编辑按钮\n      cardList: [{\n        listId: \"今日计划\",\n        target: []\n      }, {\n        listId: \"明日计划\",\n        target: []\n      }, {\n        listId: \"今待安排\",\n        target: []\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.cardlist();\n  },\n  methods: {\n    // mock数据模拟方法cardlist()\n    cardlist: function cardlist() {\n      var _this = this;\n\n      getTasks().then(function (res) {\n        console.log(res);\n        var list = res.data;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            if (item.todolist_id == \"5c21f690c13ebb4ae7df1cfe\") {\n              _this.cardList[0].target.push(item);\n            } else if (item.todolist_id == \"5c21f725c13ebb4ae6df1d00\") {\n              _this.cardList[1].target.push(item);\n            } else if (item.todolist_id == \"5c22f19ac13ebb65c641c609\") {\n              _this.cardList[2].target.push(item);\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    nowBoxTarget: function nowBoxTarget(index) {\n      this.nowBox = index;\n    },\n    isFinished: function isFinished(index, index1) {\n      var _this2 = this;\n\n      var now = this.cardList[index].target[index1];\n      now.is_complete = !now.is_complete;\n      now.complete_time = new Date().getTime();\n      taskEdit(now).then(function (res) {\n        _this2.cardList[index].target[index1];\n      }).catch(function (err) {\n        alert(err);\n      });\n    },\n    checkBoxColor: function checkBoxColor() {\n      this.checkBox = !this.checkBox;\n    },\n    //创建一个新的target\n    createTarget: function createTarget(index) {\n      var now = this.createItem[index];\n      now.status = true;\n      this.createTargetName = \"\";\n      this.createItem.splice(index, 1, now); // this.createItem[index].status = true;\n    },\n    saveCreateItem: function saveCreateItem(index) {\n      var _this3 = this;\n\n      if (this.createTargetName != \"\") {\n        taskAdd({\n          todolist_id: this.createItem[index].id,\n          content: this.createTargetName\n        }).then(function (res) {\n          var result = res.data;\n\n          _this3.cardList[index].target.unshift(result);\n        }); // axios\n        //   .post(\"/api/task/add\", {\n        //     todolist_id: this.createItem[index].id,\n        //     content: this.createTargetName\n        //   })\n        //   .then(res => {\n        //     var result = res.data;\n        //     if (result.code == 20000) {\n        //       this.cardList[index].target.unshift(result.data);\n        //     }\n        //   });\n      } else {\n        console.log(\"提示是否要关闭\");\n      }\n\n      this.cancel(index);\n    },\n    editItem: function editItem(index, index1) {\n      this.isEdite.a = index;\n      this.isEdite.b = index1;\n      var now = this.cardList[index].target[index1];\n      this.editeTargetName = now.content; // this.cardList[index].target.splice(index1, 1, now);\n    },\n    cancel: function cancel(index) {\n      var now = this.createItem[index];\n      now.status = false;\n      this.createItem.splice(index, 1, now); // this.createItem[index].status = false;    //使用该方法数组元素改变，但是不会在视图上显示\n    },\n    // deleteCreateItem() {\n    //   this.createTargetName = \"\";\n    // },\n    //单个target相关操作\n    mouseOver: function mouseOver(index, index1) {\n      var now;\n      this.pull.a = index;\n      this.pull.b = index1;\n      this.cardList[index].target[index1].mouseOver = true;\n      now = this.cardList[index];\n      this.cardList.splice(index, 1, now);\n    },\n    mouseOut: function mouseOut(index, index1) {\n      var now;\n      this.cardList[index].target[index1].mouseOver = false;\n      now = this.cardList[index];\n      this.cardList.splice(index, 1, now);\n    },\n    //删除编辑项目\n    deleteItem: function deleteItem(index, index1) {\n      var _this4 = this;\n\n      taskRm({\n        id: this.cardList[index].target[index1].id\n      }).then(function (res) {\n        _this4.cardList[index].target.splice(index1, 1);\n      });\n    },\n    changeTargetBox: function changeTargetBox(event, index, index1) {\n      var _this5 = this;\n\n      // console.log(event, index, index1);\n      if (event != index) {\n        // var target = this.cardList[index].target[index1];\n        // console.log(target);\n        var now = this.cardList[index].target[index1];\n\n        if (event == \"0\") {\n          now.todolist_id = \"5c21f690c13ebb4ae7df1cfe\";\n          this.cardList[0].target.unshift(now);\n        }\n\n        if (event == \"1\") {\n          now.todolist_id = \"5c21f725c13ebb4ae6df1d00\";\n          this.cardList[1].target.unshift(now);\n        }\n\n        if (event == \"2\") {\n          now.todolist_id = \"5c22f19ac13ebb65c641c609\";\n          this.cardList[2].target.unshift(now);\n        }\n\n        this.cardList[index].target.splice(index1, 1);\n      }\n\n      taskEdit({\n        id: now.id,\n        todolist_id: now.todolist_id,\n        content: now.content,\n        is_complete: now.is_complete,\n        is_deleted: now.is_deleted,\n        complete_time: now.complete_time\n      }).then(function (res) {\n        _this5.cardList[index].target[index1].content = _this5.editeTargetName;\n\n        _this5.editecancel();\n      });\n    },\n    saveEditeItem: function saveEditeItem(index, index1) {\n      var _this6 = this;\n\n      if (this.editeTargetName) {\n        var now = this.cardList[index].target[index1];\n        taskEdit({\n          id: now.id,\n          todolist_id: now.todolist_id,\n          content: this.editeTargetName,\n          is_complete: now.is_complete,\n          is_deleted: now.is_deleted,\n          complete_time: now.complete_time\n        }).then(function (res) {\n          _this6.cardList[index].target[index1].content = _this6.editeTargetName;\n\n          _this6.editecancel();\n        });\n      }\n    },\n    editecancel: function editecancel() {\n      this.isEdite.a = -1;\n      this.isEdite.b = -1; // var now = this.cardList[index].target[index1];\n      // this.cardList[index].target.splice(index1, 1, now);\n    },\n    isAlreadyO: function isAlreadyO() {\n      this.isAlready = false;\n    },\n    alreadyComplete: function alreadyComplete() {\n      var _this7 = this;\n\n      // var date = [];\n      this.isAlready = true; //循环出列表中所有is_complete为true的 name和complete_time,形成一个新的数组，传给dateTarget变量最终传给子组件\n      // for (let i = 0; i < this.cardList.length; i++) {\n      //   for (let j = 0; j < this.cardList[i].target.length; j++) {\n      //     var item = this.cardList[i].target[j];\n      //     if (item.is_complete) {\n      //       var k = {};\n      //       k.date = item.complete_time;\n      //       k.content = item.content;\n      //       date[date.length] = k;\n      //       this.cardList[i].target.splice(j, 1); //此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\n      //       j--;\n      //     }\n      //   }\n      // }\n\n      getTasks(true).then(function (res) {\n        console.log(res.code);\n\n        for (var i = 0; i < _this7.cardList.length; i++) {\n          for (var j = 0; j < _this7.cardList[i].target.length; j++) {\n            var item = _this7.cardList[i].target[j];\n\n            if (item.is_complete) {\n              _this7.cardList[i].target.splice(j, 1); //此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\n\n\n              j--;\n            }\n          }\n        }\n\n        _this7.dateTarget = res.data;\n      });\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"home\" style=\"align:center\">\r\n    <div id=\"card-flex\" v-show=\"!isAlready\">\r\n      <div class=\"card\" v-bind:class=\"{boxTarget:index==nowBox}\" @click=\"nowBoxTarget(index)\" v-for=\"(item, index) in cardList\" :key=\"index\">\r\n        <!-- <el-checkbox v-model=\"checked\" v-bind:class=\"{checkBox:checked}\" @change=\"checkBoxColor\">备选项</el-checkbox> -->\r\n        <!-- 该事件不能放在el-cart组件上，会失效 -->\r\n        <div class=\"cardHead\">\r\n          <span>{{item.listId}}</span>\r\n        </div>\r\n        <div class=\"cardBody\">\r\n          <div style=\"margin-bottom:10px;margin-top:5px;\">\r\n            <el-button size=\"mini\" @click=\"createTarget(index)\">新建任务</el-button>\r\n            <div v-show=\"createItem[index].status\" class=\"addOption\">\r\n              <input type=\"text\" v-model=\"createTargetName\" class=\"createInput\" @keyup.enter=\"saveCreateItem(index)\">\r\n              <div @click=\"saveCreateItem(index)\">确定</div>\r\n              <!-- <div size=\"mini\" @click=\"deleteCreateItem\">删除</div> -->\r\n              <div size=\"mini\" @click=\"cancel(index)\">取消</div>\r\n            </div>\r\n          </div>\r\n          <div v-for=\"(item1,index1) in item.target\" :key=\"index1\" class=\"text item\">\r\n            <div class=\"targetItem\" @mouseover=\"mouseOver(index,index1)\" @mouseout=\"mouseOut(index, index1)\">\r\n              <div style=\"width:30px;height:30px\" class=\"checkBoxStatus\" @click=\"isFinished(index,index1)\" v-bind:class=\"{checkBoxStatus1:item1.is_complete}\"></div>\r\n              <div v-show=\"!(isEdite.a==index && isEdite.b == index1)\" v-bind:class=\"{targetItemStatus:item1.is_complete}\">{{item1.content}}</div>\r\n              <!-- 移动、编辑删除操作 -->\r\n              <div class=\"editDeleteIco\" v-show='nowBox==index && item1.mouseOver && !(isEdite.a==index && isEdite.b == index1) || (nowBox==index && !(isEdite.a==index && isEdite.b == index1) && pull.a==index && pull.b==index1)'>\r\n                <!-- 任务移动操作 -->\r\n                <!-- command事件本身有一个回调事件，在添加其它参数时，需要使用$event，来代表它自带的回调事件，否则会出现找不到参数的情况，若不添加其它参数，$event可省略 -->\r\n                <el-dropdown @command=\"changeTargetBox($event, index, index1)\">\r\n                  <span class=\"el-dropdown-link\">\r\n                    移动\r\n                    <!-- <i class=\"el-icon-arrow-down el-icon--right\"></i> -->\r\n                  </span>\r\n                  <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item command=\"0\">今日目标</el-dropdown-item>\r\n                    <el-dropdown-item command=\"1\">明日目标</el-dropdown-item>\r\n                    <el-dropdown-item command=\"2\">待分配</el-dropdown-item>\r\n                  </el-dropdown-menu>\r\n                </el-dropdown>\r\n                <i class=\"el-icon-edit\" @click=\"editItem(index, index1)\"></i>\r\n                <i class=\"el-icon-delete\" @click=\"deleteItem(index, index1)\"></i>\r\n              </div>\r\n              <div v-show=\"isEdite.a==index && isEdite.b == index1\">\r\n                <input type=\"text\" v-model=\"editeTargetName\" class=\"createInput\">\r\n                <el-button style=\"margin-left:10px;\" size=\"mini\" @click=\"saveEditeItem(index, index1)\">确定</el-button>\r\n                <el-button size=\"mini\" @click=\"editecancel()\">取消</el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"alreadyComplete\" @click=\"alreadyComplete\">查看已完成成任务</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-show=\"isAlready\" @click=\"isAlreadyO\" style=\"width:50%;height:30px;margin-left:25%;margin-right:25%;margin-bottom:-5px;background-color:#F0B775;border-radius:5px;position:absolute;color:white;line-height:30px;\">返回首页</div>\r\n    <already-task v-bind:dateTarget=\"dateTarget\" v-show=\"isAlready\" style=\"position:absolute;margin-top:30px;\"></already-task>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\nimport axios from \"axios\";\r\nimport alreadyTask from \"@/components/alreadyTask.vue\";\r\nimport { getTasks,taskEdit, taskAdd ,taskRm} from \"@/api/apis.js\";\r\nexport default {\r\n  name: \"home\",\r\n  components: {\r\n    alreadyTask\r\n  },\r\n  data() {\r\n    return {\r\n      dateTarget: [],\r\n      nowBox: 0,\r\n      createItem: [\r\n        { status: false, id: \"5c21f690c13ebb4ae7df1cfe\" },\r\n        { status: false, id: \"5c21f725c13ebb4ae6df1d00\" },\r\n        { status: false, id: \"5c22f19ac13ebb65c641c609\" }\r\n      ], //确定当前是在那个地方创建新任务\r\n      createTargetName: \"\",\r\n      checked: false,\r\n      checkBox: false,\r\n      editeTargetName: \"\",\r\n      pull: { a: -1, b: -1 }, //鼠标最后经过那个item\r\n      isEdite: { a: -1, b: -1 },\r\n      isAlready: false,\r\n      // mouseOver: false,   //鼠标经过控制删除和编辑按钮\r\n      cardList: [\r\n        {\r\n          listId: \"今日计划\",\r\n          target: []\r\n        },\r\n        {\r\n          listId: \"明日计划\",\r\n          target: []\r\n        },\r\n        {\r\n          listId: \"今待安排\",\r\n          target: []\r\n        }\r\n      ]\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.cardlist();\r\n  },\r\n  methods: {\r\n    // mock数据模拟方法cardlist()\r\n    cardlist() {\r\n      getTasks()\r\n        .then(res => {\r\n          console.log(res);\r\n          var list = res.data;\r\n          for (var item of list) {\r\n            if (item.todolist_id == \"5c21f690c13ebb4ae7df1cfe\") {\r\n              this.cardList[0].target.push(item);\r\n            } else if (item.todolist_id == \"5c21f725c13ebb4ae6df1d00\") {\r\n              this.cardList[1].target.push(item);\r\n            } else if (item.todolist_id == \"5c22f19ac13ebb65c641c609\") {\r\n              this.cardList[2].target.push(item);\r\n            }\r\n          }\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        });\r\n    },\r\n    nowBoxTarget(index) {\r\n      this.nowBox = index;\r\n    },\r\n    isFinished(index, index1) {\r\n      var now = this.cardList[index].target[index1];\r\n      now.is_complete = !now.is_complete;\r\n      now.complete_time = new Date().getTime();\r\n      taskEdit(now).then(res => {\r\n          this.cardList[index].target[index1]\r\n      })\r\n      .catch(err => {\r\n        alert(err);\r\n      })\r\n    },\r\n    checkBoxColor() {\r\n      this.checkBox = !this.checkBox;\r\n    },\r\n    //创建一个新的target\r\n    createTarget(index) {\r\n      var now = this.createItem[index];\r\n      now.status = true;\r\n      this.createTargetName = \"\";\r\n      this.createItem.splice(index, 1, now);\r\n      // this.createItem[index].status = true;\r\n    },\r\n    saveCreateItem(index) {\r\n      if (this.createTargetName != \"\") {\r\n\r\n        taskAdd({\r\n            todolist_id: this.createItem[index].id,\r\n            content: this.createTargetName\r\n          }).then(res => {\r\n            var result = res.data;\r\n              this.cardList[index].target.unshift(result);\r\n          });\r\n        // axios\r\n        //   .post(\"/api/task/add\", {\r\n        //     todolist_id: this.createItem[index].id,\r\n        //     content: this.createTargetName\r\n        //   })\r\n        //   .then(res => {\r\n        //     var result = res.data;\r\n        //     if (result.code == 20000) {\r\n        //       this.cardList[index].target.unshift(result.data);\r\n        //     }\r\n        //   });\r\n      } else {\r\n        console.log(\"提示是否要关闭\");\r\n      }\r\n      this.cancel(index);\r\n    },\r\n    editItem(index, index1) {\r\n      this.isEdite.a = index;\r\n      this.isEdite.b = index1;\r\n      var now = this.cardList[index].target[index1];\r\n      this.editeTargetName = now.content;\r\n      // this.cardList[index].target.splice(index1, 1, now);\r\n    },\r\n    cancel(index) {\r\n      var now = this.createItem[index];\r\n      now.status = false;\r\n      this.createItem.splice(index, 1, now);\r\n      // this.createItem[index].status = false;    //使用该方法数组元素改变，但是不会在视图上显示\r\n    },\r\n    // deleteCreateItem() {\r\n    //   this.createTargetName = \"\";\r\n    // },\r\n    //单个target相关操作\r\n    mouseOver(index, index1) {\r\n      var now;\r\n      this.pull.a = index;\r\n      this.pull.b = index1;\r\n      this.cardList[index].target[index1].mouseOver = true;\r\n      now = this.cardList[index];\r\n      this.cardList.splice(index, 1, now);\r\n    },\r\n    mouseOut(index, index1) {\r\n      var now;\r\n      this.cardList[index].target[index1].mouseOver = false;\r\n      now = this.cardList[index];\r\n      this.cardList.splice(index, 1, now);\r\n    },\r\n    //删除编辑项目\r\n    deleteItem(index, index1) {\r\n      taskRm({\r\n          id: this.cardList[index].target[index1].id\r\n        })\r\n        .then(res => {\r\n            this.cardList[index].target.splice(index1, 1);\r\n        });\r\n    },\r\n    changeTargetBox(event, index, index1) {\r\n      // console.log(event, index, index1);\r\n      if (event != index) {\r\n        // var target = this.cardList[index].target[index1];\r\n        // console.log(target);\r\n        var now = this.cardList[index].target[index1];\r\n        if (event == \"0\") {\r\n          now.todolist_id = \"5c21f690c13ebb4ae7df1cfe\";\r\n          this.cardList[0].target.unshift(now);\r\n        }\r\n        if (event == \"1\") {\r\n          now.todolist_id = \"5c21f725c13ebb4ae6df1d00\";\r\n          this.cardList[1].target.unshift(now);\r\n        }\r\n        if (event == \"2\") {\r\n          now.todolist_id = \"5c22f19ac13ebb65c641c609\";\r\n          this.cardList[2].target.unshift(now);\r\n        }\r\n        this.cardList[index].target.splice(index1, 1);\r\n      }\r\n      taskEdit({\r\n          id: now.id,\r\n          todolist_id: now.todolist_id,\r\n          content: now.content,\r\n          is_complete: now.is_complete,\r\n          is_deleted: now.is_deleted,\r\n          complete_time: now.complete_time\r\n        })\r\n        .then(res => { \r\n            this.cardList[index].target[index1].content = this.editeTargetName;\r\n            this.editecancel();         \r\n        });\r\n    },\r\n    saveEditeItem(index, index1) {\r\n      if (this.editeTargetName) {\r\n        var now = this.cardList[index].target[index1];\r\n        taskEdit({\r\n            id: now.id,\r\n            todolist_id: now.todolist_id,\r\n            content: this.editeTargetName,\r\n            is_complete: now.is_complete,\r\n            is_deleted: now.is_deleted,\r\n            complete_time: now.complete_time\r\n          })\r\n          .then(res => {\r\n              this.cardList[index].target[\r\n                index1\r\n              ].content = this.editeTargetName;\r\n              this.editecancel();\r\n          });\r\n      }\r\n    },\r\n    editecancel() {\r\n      this.isEdite.a = -1;\r\n      this.isEdite.b = -1;\r\n      // var now = this.cardList[index].target[index1];\r\n      // this.cardList[index].target.splice(index1, 1, now);\r\n    },\r\n    isAlreadyO() {\r\n      this.isAlready = false;\r\n    },\r\n    alreadyComplete() {\r\n      // var date = [];\r\n      this.isAlready = true;\r\n      //循环出列表中所有is_complete为true的 name和complete_time,形成一个新的数组，传给dateTarget变量最终传给子组件\r\n      // for (let i = 0; i < this.cardList.length; i++) {\r\n      //   for (let j = 0; j < this.cardList[i].target.length; j++) {\r\n      //     var item = this.cardList[i].target[j];\r\n      //     if (item.is_complete) {\r\n      //       var k = {};\r\n      //       k.date = item.complete_time;\r\n      //       k.content = item.content;\r\n      //       date[date.length] = k;\r\n      //       this.cardList[i].target.splice(j, 1); //此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\r\n      //       j--;\r\n      //     }\r\n      //   }\r\n      // }\r\n      getTasks(true).then(res => {\r\n        console.log(res.code);\r\n          for (let i = 0; i < this.cardList.length; i++) {\r\n            for (let j = 0; j < this.cardList[i].target.length; j++) {\r\n              var item = this.cardList[i].target[j];\r\n              if (item.is_complete) {\r\n                this.cardList[i].target.splice(j, 1); //此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\r\n                j--;\r\n              }\r\n            }\r\n          }\r\n          this.dateTarget = res.data;\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.home {\r\n  text-align: center;\r\n}\r\n#card-flex {\r\n  margin-top: 100px;\r\n  display: flex;\r\n  display: -webkit-flex; /* OLD - iOS 6-, Safari 3.1-6 */\r\n  display: -moz-flex; /*OLD - Firefox 19- H5不用考虑 */\r\n  display: -mz-flex; /*TWEENER IE 10 */\r\n  display: -ms-flex;\r\n  justify-content: space-around;\r\n  -webkit-justify-content: space-around;\r\n  -moz-justify-content: space-around;\r\n  -o-justify-content: space-around;\r\n  -ms-justify-content: space-around;\r\n\r\n  align-items: flex-start;\r\n  -webkit-align-items: flex-start;\r\n  -moz-align-items: flex-start;\r\n  -o-align-items: flex-start;\r\n  -ms-align-items: flex-start;\r\n}\r\n.card {\r\n  /* display: block; */\r\n  /* background-image: url(\"../../img/bag5.jpg\"); */\r\n  border-radius: 5px;\r\n  background-size: 100% 100%;\r\n  text-align: left;\r\n  border: 1px solid #dcdcdc;\r\n  width: 30%;\r\n  /* border-:5px;: 5px; */\r\n  box-shadow: 0px 0px 10px #dcdcdc;\r\n}\r\n.cardHead {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #dcdcdc;\r\n}\r\n.cardBody {\r\n  padding: 10px;\r\n  padding-left: 10%;\r\n  padding-right: 10%;\r\n  padding-bottom: 5%;\r\n}\r\n.item {\r\n  margin-bottom: 14px;\r\n}\r\n.addOption {\r\n  margin-top: 10px;\r\n}\r\n.addOption div {\r\n  display: inline-block;\r\n  width: 30px;\r\n  height: 15px;\r\n  font-size: 14px;\r\n  margin-left: 8px;\r\n  color: #409eff;\r\n  cursor: pointer;\r\n}\r\n.text {\r\n  font-size: 18px;\r\n  text-align: left;\r\n}\r\n.cardContain {\r\n  text-align: left;\r\n  margin-top: 0px;\r\n}\r\n.boxTarget {\r\n  /* display: inline-block; */\r\n  width: 30%;\r\n  border: 2px solid #409dff;\r\n  border-radius: 5px;\r\n}\r\n.createInput {\r\n  width: 60%;\r\n  -web-kit-appearance: none;\r\n  -moz-appearance: none;\r\n  border: 0px;\r\n  border-bottom: 2px solid #409dff;\r\n  height: 22px;\r\n  font-size: 18px;\r\n}\r\n.targetItem div {\r\n  display: inline-block;\r\n}\r\n.targetItemName {\r\n  margin-left: 12px;\r\n  margin-right: 20px;\r\n}\r\n.targetItemStatus,\r\n.checkBox {\r\n  color: #ccc;\r\n}\r\n.checkBoxStatus {\r\n  background-image: url(\"../assets/checkBox.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: 25px;\r\n  margin-bottom: -12px;\r\n}\r\n.checkBoxStatus1 {\r\n  background-image: url(\"../assets/checkBox1.svg\");\r\n}\r\n.editDeleteIco {\r\n  margin-left: 30px;\r\n}\r\n.editDeleteIco i {\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n}\r\n.el-icon-edit,\r\n.el-icon-delete {\r\n  cursor: pointer;\r\n}\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n.el-icon-arrow-down {\r\n  font-size: 12px;\r\n}\r\n.alreadyComplete {\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #409eff;\r\n}\r\n</style>"],"sourceRoot":"src\\views"}]}