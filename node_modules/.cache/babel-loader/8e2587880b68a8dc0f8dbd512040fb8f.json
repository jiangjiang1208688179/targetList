{"remainingRequest":"D:\\mine\\targetList\\targetList\\node_modules\\babel-loader\\lib\\index.js!D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\mine\\targetList\\targetList\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\mine\\targetList\\targetList\\src\\views\\Home.vue","mtime":1545382583815},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\mine\\targetList\\targetList\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport axios from 'axios';\nimport alreadyTask from '@/components/alreadyTask.vue';\nexport default {\n  name: \"home\",\n  components: {\n    alreadyTask: alreadyTask\n  },\n  data: function data() {\n    return {\n      dateTarget: [],\n      nowBox: 0,\n      createItem: [false, false, false],\n      createTargetName: \"\",\n      checked: false,\n      checkBox: false,\n      editeTargetName: \"\",\n      pull: {\n        a: -1,\n        b: -1\n      },\n      //鼠标最后经过那个item\n      isEdite: {\n        a: -1,\n        b: -1\n      },\n      isAlready: false,\n      // mouseOver: false,   //鼠标经过控制删除和编辑按钮\n      cardList: []\n    };\n  },\n  mounted: function mounted() {\n    this.cardlist();\n  },\n  methods: {\n    // mock数据模拟方法cardlist()\n    cardlist: function cardlist() {\n      var _this = this;\n\n      axios.get(\"/cardList\").then(function (res) {\n        console.log(res);\n        _this.cardList = res.data;\n      });\n    },\n    nowBoxTarget: function nowBoxTarget(index) {\n      this.nowBox = index;\n    },\n    delectItem: function delectItem(index, index1) {\n      // console.log(index, \"  \", index1);\n      this.cardList[index].target[index1].status = !this.cardList[index].target[index1].status;\n      this.cardList[index].target[index1].completeDate = new Date().getTime();\n    },\n    checkBoxColor: function checkBoxColor() {\n      this.checkBox = !this.checkBox;\n    },\n    //创建一个新的target\n    createTarget: function createTarget(index) {\n      this.createTargetName = \"\";\n      this.createItem.splice(index, 1, true); // this.createItem[index] = true;\n    },\n    saveCreateItem: function saveCreateItem(index) {\n      if (this.createTargetName != \"\") {\n        this.cardList[index].target.unshift({\n          name: this.createTargetName,\n          status: false,\n          isDelete: false,\n          completeDate: '',\n          chooseList: index\n        });\n      } else {\n        console.log(\"提示要关闭\");\n      }\n\n      this.cancel(index);\n    },\n    editItem: function editItem(index, index1) {\n      console.log(index, index1);\n      this.isEdite.a = index;\n      this.isEdite.b = index1;\n      var now = this.cardList[index].target[index1];\n      this.editeTargetName = now.name; // this.cardList[index].target.splice(index1, 1, now);\n    },\n    cancel: function cancel(index) {\n      this.createItem.splice(index, 1, false); // this.createItem[index] = false;    //使用该方法数组元素改变，但是不会在视图上显示\n    },\n    deleteCreateItem: function deleteCreateItem() {\n      this.createTargetName = \"\";\n    },\n    //单个target相关操作\n    mouseOver: function mouseOver(index, index1) {\n      var now;\n      this.pull.a = index;\n      this.pull.b = index1;\n      this.cardList[index].target[index1].mouseOver = true;\n      now = this.cardList[index];\n      this.cardList.splice(index, 1, now);\n    },\n    mouseOut: function mouseOut(index, index1) {\n      var now;\n      this.cardList[index].target[index1].mouseOver = false;\n      now = this.cardList[index];\n      this.cardList.splice(index, 1, now);\n    },\n    //删除编辑项目\n    deleteItem: function deleteItem(index, index1) {\n      this.cardList[index].target.splice(index1, 1);\n    },\n    changeTargetBox: function changeTargetBox(event, index, index1) {\n      console.log(event, index, index1);\n\n      if (event != index) {\n        var target = this.cardList[index].target[index1];\n        console.log(target);\n\n        if (event == \"0\") {\n          this.cardList[0].target.unshift(target);\n          this.cardList[index].target.splice(index1, 1);\n        }\n\n        if (event == \"1\") {\n          this.cardList[1].target.unshift(target);\n          this.cardList[index].target.splice(index1, 1);\n        }\n\n        if (event == \"2\") {\n          this.cardList[2].target.unshift(target);\n          this.cardList[index].target.splice(index1, 1);\n        }\n      }\n    },\n    saveEditeItem: function saveEditeItem(index, index1) {\n      if (this.editeTargetName) {\n        this.cardList[index].target[index1].name = this.editeTargetName;\n        this.editecancel(index, index1);\n      }\n    },\n    editecancel: function editecancel(index, index1) {\n      this.isEdite.a = -1;\n      this.isEdite.b = -1; // var now = this.cardList[index].target[index1];\n      // this.cardList[index].target.splice(index1, 1, now);\n    },\n    isAlreadyO: function isAlreadyO() {\n      this.isAlready = false;\n    },\n    alreadyComplete: function alreadyComplete() {\n      var date = [];\n      this.isAlready = true; //循环出列表中所有status为true的 name和completeDate,形成一个新的数组，传给dateTarget变量最终传给子组件\n\n      for (var i = 0; i < this.cardList.length; i++) {\n        for (var j = 0; j < this.cardList[i].target.length; j++) {\n          var item = this.cardList[i].target[j];\n\n          if (item.status) {\n            var k = {};\n            k.date = item.completeDate;\n            k.name = item.name;\n            date[date.length] = k;\n            this.cardList[i].target.splice(j, 1); //此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\n\n            j--;\n          }\n        } // for(let [index,item] of this.cardList[i].target.entries()){ //这里用到了for...of 的索引，所以需要添加entries()\n        //   if(item.status) {\n        //     //vue中需要注意的是，使用对象a.xx的时候,必须先要定义a的类型是‘对象’， 否者一直会报错\n        //     var k = {};\n        //     k.date = item.completeDate;\n        //     k.name = item.name;\n        //     date[date.length] = k;\n        //     console.log('111111',i,'  ',index);\n        //     this.cardList[i].target.splice(index, 1);//此处是为了在返回时，删除已经勾选的项目\n        //     index--;\n        //   }\n        // }\n\n      }\n\n      this.dateTarget = date;\n    }\n  }\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"home\" style=\"align:center\">\r\n    <div id=\"card-flex\" v-show=\"!isAlready\">\r\n      <div class=\"card\" v-bind:class=\"{boxTarget:index==nowBox}\" @click=\"nowBoxTarget(index)\" v-for=\"(item, index) in cardList\" :key=\"index\">\r\n        <!-- <el-checkbox v-model=\"checked\" v-bind:class=\"{checkBox:checked}\" @change=\"checkBoxColor\">备选项</el-checkbox> -->\r\n        <!-- 该事件不能放在el-cart组件上，会失效 -->\r\n        <div class=\"cardHead\">\r\n          <span>{{item.listId}}</span>\r\n        </div>\r\n        <div class=\"cardBody\">\r\n          <div style=\"margin-bottom:10px;margin-top:5px;\">\r\n            <el-button size=\"mini\" @click=\"createTarget(index)\">新建任务</el-button>\r\n            <div v-show=\"createItem[index]\" class=\"addOption\">\r\n              <input type=\"text\" v-model=\"createTargetName\" class=\"createInput\" @keyup.enter=\"saveCreateItem(index)\">\r\n              <div @click=\"saveCreateItem(index)\">确定</div>\r\n              <div size=\"mini\" @click=\"deleteCreateItem\">删除</div>\r\n              <div size=\"mini\" @click=\"cancel(index)\">取消</div>\r\n            </div>\r\n          </div>\r\n          <div v-for=\"(item1,index1) in item.target\" :key=\"index1\" class=\"text item\">\r\n            <div class=\"targetItem\" @mouseover=\"mouseOver(index,index1)\" @mouseout=\"mouseOut(index, index1)\">\r\n              <div style=\"width:30px;height:30px\" class=\"checkBoxStatus\" @click=\"delectItem(index,index1)\" v-bind:class=\"{checkBoxStatus1:item1.status}\"></div>\r\n              <div v-show=\"!(isEdite.a==index && isEdite.b == index1)\" v-bind:class=\"{targetItemStatus:item1.status}\">{{item1.name}}</div>\r\n              <!-- 移动、编辑删除操作 -->\r\n              <div class=\"editDeleteIco\" v-show='nowBox==index && item1.mouseOver && !(isEdite.a==index && isEdite.b == index1) || (nowBox==index && !(isEdite.a==index && isEdite.b == index1) && pull.a==index && pull.b==index1)'>\r\n                <!-- 任务移动操作 -->\r\n                <!-- command事件本身有一个回调事件，在添加其它参数时，需要使用$event，来代表它自带的回调事件，否则会出现找不到参数的情况，若不添加其它参数，$event可省略 -->\r\n                <el-dropdown @command=\"changeTargetBox($event, index, index1)\">\r\n                  <span class=\"el-dropdown-link\">\r\n                    移动\r\n                    <!-- <i class=\"el-icon-arrow-down el-icon--right\"></i> -->\r\n                  </span>\r\n                  <el-dropdown-menu slot=\"dropdown\">\r\n                    <el-dropdown-item command=\"0\">今日目标</el-dropdown-item>\r\n                    <el-dropdown-item command=\"1\">明日目标</el-dropdown-item>\r\n                    <el-dropdown-item command=\"2\">待分配</el-dropdown-item>\r\n                  </el-dropdown-menu>\r\n                </el-dropdown>\r\n                <i class=\"el-icon-edit\" @click=\"editItem(index, index1)\"></i>\r\n                <i class=\"el-icon-delete\" @click=\"deleteItem(index, index1)\"></i>\r\n              </div>\r\n              <div v-show=\"isEdite.a==index && isEdite.b == index1\">\r\n                <input type=\"text\" v-model=\"editeTargetName\" class=\"createInput\">\r\n                <el-button style=\"margin-left:10px;\" size=\"mini\" @click=\"saveEditeItem(index, index1)\">确定</el-button>\r\n                <el-button size=\"mini\" @click=\"editecancel(index, index1)\">取消</el-button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"alreadyComplete\" @click=\"alreadyComplete\">查看已完成成任务</div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div v-show=\"isAlready\" @click=\"isAlreadyO\" style=\"width:50%;height:30px;margin-left:25%;margin-right:25%;margin-bottom:-5px;background-color:#F0B775;border-radius:5px;position:absolute;color:white;line-height:30px;\">返回首页</div>\r\n    <already-task v-bind:dateTarget=\"dateTarget\" v-show=\"isAlready\" style=\"position:absolute;margin-top:30px;\"></already-task>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\n// import HelloWorld from '@/components/HelloWorld.vue'\r\nimport axios from 'axios'\r\nimport alreadyTask from '@/components/alreadyTask.vue'\r\nexport default {\r\n  name: \"home\",\r\n  components: {\r\n    alreadyTask\r\n  },\r\n  data() {\r\n    return {\r\n      dateTarget: [],\r\n      nowBox: 0,\r\n      createItem: [false, false, false],\r\n      createTargetName: \"\",\r\n      checked: false,\r\n      checkBox: false,\r\n      editeTargetName: \"\",\r\n      pull: { a: -1, b: -1 }, //鼠标最后经过那个item\r\n      isEdite: { a: -1, b: -1 },\r\n      isAlready: false,\r\n      // mouseOver: false,   //鼠标经过控制删除和编辑按钮\r\n      cardList: []\r\n    };\r\n  },\r\n\r\n  mounted(){\r\n    this.cardlist();\r\n  },\r\n  methods: {\r\n  // mock数据模拟方法cardlist()\r\n    cardlist(){\r\n      axios.get(\"/cardList\").then(res => {\r\n        console.log(res);\r\n        this.cardList = res.data;\r\n      });\r\n    },\r\n    nowBoxTarget(index) {\r\n      this.nowBox = index;\r\n    },\r\n    delectItem(index, index1) {\r\n      // console.log(index, \"  \", index1);\r\n      this.cardList[index].target[index1].status = !this.cardList[index].target[index1].status;\r\n      this.cardList[index].target[index1].completeDate = new Date().getTime();\r\n    },\r\n    checkBoxColor() {\r\n      this.checkBox = !this.checkBox;\r\n    },\r\n    //创建一个新的target\r\n    createTarget(index) {\r\n      this.createTargetName = \"\";\r\n      this.createItem.splice(index, 1, true);\r\n      // this.createItem[index] = true;\r\n    },\r\n    saveCreateItem(index) {\r\n      if (this.createTargetName != \"\") {\r\n        this.cardList[index].target.unshift({\r\n          name: this.createTargetName,\r\n          status: false,\r\n          isDelete: false,\r\n          completeDate: '',\r\n          chooseList: index\r\n        });\r\n      } else {\r\n        console.log(\"提示要关闭\");\r\n      }\r\n      this.cancel(index);\r\n    },\r\n    editItem(index, index1) {\r\n      console.log(index, index1);\r\n      this.isEdite.a = index;\r\n      this.isEdite.b = index1;\r\n      var now = this.cardList[index].target[index1];\r\n      this.editeTargetName = now.name;\r\n      // this.cardList[index].target.splice(index1, 1, now);\r\n    },\r\n    cancel(index) {\r\n      this.createItem.splice(index, 1, false);\r\n      // this.createItem[index] = false;    //使用该方法数组元素改变，但是不会在视图上显示\r\n    },\r\n    deleteCreateItem() {\r\n      this.createTargetName = \"\";\r\n    },\r\n    //单个target相关操作\r\n    mouseOver(index, index1) {\r\n      var now;\r\n      this.pull.a = index;\r\n      this.pull.b = index1;\r\n      this.cardList[index].target[index1].mouseOver = true;\r\n      now = this.cardList[index];\r\n      this.cardList.splice(index, 1, now);\r\n    },\r\n    mouseOut(index, index1) {\r\n      var now;\r\n      this.cardList[index].target[index1].mouseOver = false;\r\n      now = this.cardList[index];\r\n      this.cardList.splice(index, 1, now);\r\n    },\r\n    //删除编辑项目\r\n    deleteItem(index, index1) {\r\n      this.cardList[index].target.splice(index1, 1);\r\n    },\r\n    changeTargetBox(event, index, index1) {\r\n      console.log(event, index, index1);\r\n      if (event != index) {\r\n        var target = this.cardList[index].target[index1];\r\n        console.log(target);\r\n        if (event == \"0\") {\r\n          this.cardList[0].target.unshift(target);\r\n          this.cardList[index].target.splice(index1, 1);\r\n        }\r\n        if (event == \"1\") {\r\n          this.cardList[1].target.unshift(target);\r\n          this.cardList[index].target.splice(index1, 1);\r\n        }\r\n        if (event == \"2\") {\r\n          this.cardList[2].target.unshift(target);\r\n          this.cardList[index].target.splice(index1, 1);\r\n        }\r\n      }\r\n    },\r\n    saveEditeItem(index, index1) {\r\n      if (this.editeTargetName) {\r\n        this.cardList[index].target[index1].name = this.editeTargetName;\r\n        this.editecancel(index, index1);\r\n      }\r\n    },\r\n    editecancel(index, index1) {\r\n      this.isEdite.a = -1;\r\n      this.isEdite.b = -1;\r\n      // var now = this.cardList[index].target[index1];\r\n      // this.cardList[index].target.splice(index1, 1, now);\r\n    },\r\n    isAlreadyO(){\r\n      this.isAlready = false;\r\n    },\r\n    alreadyComplete(){\r\n      var date = [];\r\n      this.isAlready = true;\r\n      //循环出列表中所有status为true的 name和completeDate,形成一个新的数组，传给dateTarget变量最终传给子组件\r\n      for (let i = 0; i<this.cardList.length; i++){\r\n        for(let j=0; j<this.cardList[i].target.length; j++){\r\n          var item = this.cardList[i].target[j];\r\n          if(item.status){\r\n            var k = {};\r\n            k.date = item.completeDate;\r\n            k.name = item.name;\r\n            date[date.length] = k;\r\n            this.cardList[i].target.splice(j, 1);//此处是为了在返回时，删除已经勾选的项目,但是splice的删除功能在for循环中是有坑的，会导致小标错乱，所以没删除一个，自动将循环的参数j--\r\n            j--;\r\n          }\r\n        }\r\n        // for(let [index,item] of this.cardList[i].target.entries()){ //这里用到了for...of 的索引，所以需要添加entries()\r\n        //   if(item.status) {\r\n        //     //vue中需要注意的是，使用对象a.xx的时候,必须先要定义a的类型是‘对象’， 否者一直会报错\r\n        //     var k = {};\r\n        //     k.date = item.completeDate;\r\n        //     k.name = item.name;\r\n        //     date[date.length] = k;\r\n        //     console.log('111111',i,'  ',index);\r\n        //     this.cardList[i].target.splice(index, 1);//此处是为了在返回时，删除已经勾选的项目\r\n        //     index--;\r\n        //   }\r\n        // }\r\n      }\r\n      this.dateTarget = date;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.home{\r\n  text-align: center;\r\n}\r\n#card-flex {\r\n  display: flex;\r\n  display: -webkit-flex; /* OLD - iOS 6-, Safari 3.1-6 */\r\n  display: -moz-flex; /*OLD - Firefox 19- H5不用考虑 */\r\n  display: -mz-flex; /*TWEENER IE 10 */\r\n  display: -ms-flex;\r\n  justify-content: space-around;\r\n  -webkit-justify-content: space-around;\r\n  -moz-justify-content: space-around;\r\n  -o-justify-content: space-around;\r\n  -ms-justify-content: space-around;\r\n\r\n  align-items: flex-start;\r\n  -webkit-align-items: flex-start;\r\n  -moz-align-items: flex-start;\r\n  -o-align-items: flex-start;\r\n  -ms-align-items: flex-start;\r\n}\r\n.card {\r\n  /* display: block; */\r\n  background-image: url('../../img/bag5.jpg');\r\n  background-size: 100% 100%;\r\n  text-align: left;\r\n  border: 1px solid #dcdcdc;\r\n  width: 30%;\r\n  /* border-:5px;: 5px; */\r\n  box-shadow: 0px 0px 10px #dcdcdc;\r\n}\r\n.cardHead {\r\n  padding: 10px;\r\n  border-bottom: 1px solid #dcdcdc;\r\n}\r\n.cardBody {\r\n  padding: 10px;\r\n  padding-left:10%;\r\n  padding-right:10%;\r\n  padding-bottom: 5%;\r\n}\r\n.item {\r\n  margin-bottom: 14px;\r\n}\r\n/* .addOption{\r\n  display: inline-block;\r\n} */\r\n.addOption div{\r\n  display: inline-block;\r\n  width:30px;\r\n  height: 15px;\r\n  font-size: 14px;\r\n  margin-left:8px;\r\n  color: \r\n}\r\n.text {\r\n  font-size: 18px;\r\n  text-align: left;\r\n}\r\n.cardContain {\r\n  text-align: left;\r\n  margin-top: 0px;\r\n}\r\n.boxTarget {\r\n  /* display: inline-block; */\r\n  width: 30%;\r\n  border: 4px solid #a8dba8;\r\n  border-radius: 5px;\r\n}\r\n.createInput {\r\n  width:60%;\r\n  -web-kit-appearance: none;\r\n  -moz-appearance: none;\r\n  border: 0px;\r\n  border-bottom: 2px solid #409dff;\r\n  height: 22px;\r\n  font-size: 18px;\r\n}\r\n.targetItem div {\r\n  display: inline-block;\r\n}\r\n.targetItemName {\r\n  margin-left: 12px;\r\n  margin-right: 20px;\r\n}\r\n.targetItemStatus,\r\n.checkBox {\r\n  color: #ccc;\r\n}\r\n.checkBoxStatus {\r\n  background-image: url(\"../assets/checkBox.svg\");\r\n  background-repeat: no-repeat;\r\n  background-size: 25px;\r\n  margin-bottom: -12px;\r\n}\r\n.checkBoxStatus1 {\r\n  background-image: url(\"../assets/checkBox1.svg\");\r\n}\r\n.editDeleteIco {\r\n  margin-left: 30px;\r\n}\r\n.editDeleteIco i {\r\n  display: inline-block;\r\n  margin-left: 15px;\r\n}\r\n.el-icon-edit, .el-icon-delete{\r\n  cursor: pointer;\r\n}\r\n.el-dropdown-link {\r\n  cursor: pointer;\r\n  color: #409eff;\r\n}\r\n.el-icon-arrow-down {\r\n  font-size: 12px;\r\n}\r\n.alreadyComplete{\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n  color: #409eff;\r\n}\r\n</style>"],"sourceRoot":"src\\views"}]}